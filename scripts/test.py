from mpl_toolkits.mplot3d import Axes3D  # noqa: F401 unused import

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
"""
wks = [['0.1869', '8.0326', '-0.0355'], ['-1.2142', '7.9434', '-0.0342'], ['-2.5728', '7.6123', '-0.0337'], ['-3.8554', '7.0499', '-0.0332'], ['-5.0210', '6.2731', '-0.0334'], ['-6.0341', '5.3059', '-0.0336'], ['-6.8644', '4.1793', '-0.0348'], ['-7.4868', '2.9231', '-0.0350'], ['-7.8813', '1.5783', '-0.0350'], ['-8.0364', '0.1868', '-0.0351'], ['-7.9455', '-1.2123', '-0.0346'], ['-7.6130', '-2.5737', '-0.0350'], ['-7.0509', '-3.8560', '-0.0356'], ['-6.2721', '-5.0232', '-0.0360'], ['-5.3078', '-6.0343', '-0.0373'], ['-4.1793', '-6.8662', '-0.0377'], ['-2.9224', '-7.4867', '-0.0390'], ['-1.5789', '-7.8801', '-0.0397'], ['-0.1876', '-8.0351', '-0.0421'], ['1.2110', '-7.9424', '-0.0429'], ['2.5725', '-7.6110', '-0.0438'], ['3.8557', '-7.0497', '-0.0449'], ['5.0211', '-6.2734', '-0.0453'], ['6.0348', '-5.3056', '-0.0451'], ['6.8646', '-4.1767', '-0.0454'], ['7.4854', '-2.9219', '-0.0449'], ['7.8794', '-1.5766', '-0.0455'], ['8.0342', '-0.1857', '-0.0453'], ['7.9427', '1.2110', '-0.0447'], ['7.6097', '2.5722', '-0.0447'], ['7.0476', '3.8552', '-0.0441'], ['6.2709', '5.0218', '-0.0427'], ['5.3036', '6.0353', '-0.0411'], ['4.1758', '6.8635', '-0.0398'], ['2.9209', '7.4853', '-0.0382'], ['1.5759', '7.8805', '-0.0365']]
wks_arr = np.array(wks, dtype='float64')
wks_refa = [['-0.0127', '-8.0045', '-4.8685'], ['1.3789', '-7.8855', '-4.8713'], ['2.7286', '-7.5266', '-4.8746'], ['3.9955', '-6.9395', '-4.8740'], ['5.1386', '-6.1403', '-4.8748'], ['6.1270', '-5.1556', '-4.8758'], ['6.9289', '-4.0143', '-4.8753'], ['7.5214', '-2.7510', '-4.8738'], ['7.8843', '-1.4042', '-4.8704'], ['8.0073', '-0.0143', '-4.8736'], ['7.8880', '1.3757', '-4.8727'], ['7.5264', '2.7242', '-4.8710'], ['6.9394', '3.9897', '-4.8694'], ['6.1411', '5.1339', '-4.8704'], ['5.1563', '6.1215', '-4.8695'], ['4.0152', '6.9251', '-4.8697'], ['2.7515', '7.5159', '-4.8677'], ['1.4049', '7.8799', '-4.8666'], ['-0.0103', '7.9963', '-4.8430'], ['-1.4010', '7.8726', '-4.8445'], ['-2.7457', '7.5089', '-4.8450'], ['-4.0076', '6.9174', '-4.8425'], ['-5.1475', '6.1165', '-4.8419'], ['-6.1320', '5.1297', '-4.8427'], ['-6.9304', '3.9865', '-4.8417'], ['-7.5170', '2.7210', '-4.8398'], ['-7.8760', '1.3738', '-4.8464']]
wks_refarr = np.array(wks_refa, dtype='float64')
wks_kreis1 =  [['-0.0886', '9.7544', '-0.7599'], ['-1.7863', '9.6804', '-0.7578'], ['-3.4677', '9.3094', '-0.7573'], ['-5.0642', '8.6353', '-0.7573'], ['-6.5129', '7.6788', '-0.7575'], ['-7.7732', '6.4714', '-0.7576'], ['-8.7993', '5.0451', '-0.7575'], ['-9.5460', '3.4611', '-0.7574'], ['-9.9952', '1.7609', '-0.7558'], ['-10.1254', '0.0083', '-0.7574'], ['-9.9343', '-1.7297', '-0.7563'], ['-9.4354', '-3.3954', '-0.7573'], ['-8.6414', '-4.9373', '-0.7583'], ['-7.5970', '-6.3024', '-0.7572'], ['-6.3329', '-7.4555', '-0.7573'], ['-4.8996', '-8.3573', '-0.7573'], ['-3.3386', '-8.9874', '-0.7574'], ['-1.7146', '-9.3317', '-0.7576'], ['-0.0689', '-9.3962', '-0.7577'], ['1.5552', '-9.1707', '-0.7576'], ['3.1053', '-8.6855', '-0.7570'], ['4.5359', '-7.9504', '-0.7574'], ['5.8217', '-6.9916', '-0.7572'], ['6.9215', '-5.8367', '-0.7572'], ['7.8124', '-4.5171', '-0.7575'], ['8.4722', '-3.0765', '-0.7569'], ['8.8902', '-1.5463', '-0.7588'], ['9.0463', '0.0348', '-0.7560'], ['8.9372', '1.6273', '-0.7587'], ['8.5625', '3.1843', '-0.7567'], ['7.9330', '4.6637', '-0.7570'], ['7.0549', '6.0276', '-0.7566'], ['5.9523', '7.2325', '-0.7576'], ['4.6499', '8.2419', '-0.7581'], ['3.1822', '9.0180', '-0.7570'], ['1.5898', '9.5310', '-0.7575']]
wks_kreis1arr = np.array(wks_kreis1, dtype='float64')
wks_kreis2 =  [['-0.0862', '9.7576', '-3.8083'], ['-1.7837', '9.6803', '-3.8058'], ['-3.4658', '9.3071', '-3.8049'], ['-5.0613', '8.6348', '-3.8067'], ['-6.5139', '7.6797', '-3.8057'], ['-7.7720', '6.4719', '-3.8051'], ['-8.7986', '5.0499', '-3.8048'], ['-9.5458', '3.4635', '-3.8051'], ['-9.9939', '1.7657', '-3.8043'], ['-10.1258', '0.0123', '-3.8052'], ['-9.9353', '-1.7276', '-3.8037'], ['-9.4346', '-3.3932', '-3.8057'], ['-8.6423', '-4.9352', '-3.8051'], ['-7.6004', '-6.2990', '-3.8052'], ['-6.3401', '-7.4524', '-3.8046'], ['-4.9012', '-8.3574', '-3.8048'], ['-3.3399', '-8.9861', '-3.8048'], ['-1.7119', '-9.3296', '-3.8048'], ['-0.0706', '-9.3939', '-3.8047'], ['1.5521', '-9.1705', '-3.8044'], ['3.1003', '-8.6849', '-3.8038'], ['4.5316', '-7.9494', '-3.8048'], ['5.8186', '-6.9905', '-3.8045'], ['6.9190', '-5.8377', '-3.8046'], ['7.8101', '-4.5179', '-3.8044'], ['8.4674', '-3.0794', '-3.8048'], ['8.8914', '-1.5497', '-3.8049'], ['9.0428', '0.0325', '-3.8053'], ['8.9340', '1.6243', '-3.8043'], ['8.5613', '3.1830', '-3.8051'], ['7.9309', '4.6596', '-3.8050'], ['7.0548', '6.0251', '-3.8070'], ['5.9533', '7.2296', '-3.8040'], ['4.6505', '8.2379', '-3.8066'], ['3.1849', '9.0151', '-3.8043'], ['1.5930', '9.5287', '-3.8049']]
wks_kreis2arr = np.array(wks_kreis2, dtype='float64')
wks_zyl = [['-0.2340', '2.4224', '1.9914'], ['-0.6468', '2.4384', '1.9930'], ['-1.0788', '2.3796', '1.9935'], ['-1.4891', '2.2405', '1.9933'], ['-1.8766', '2.0206', '1.9928'], ['-2.2122', '1.7200', '1.9926'], ['-2.4832', '1.3609', '1.9929'], ['-2.6819', '0.9512', '1.9929'], ['-2.7956', '0.5072', '1.9926'], ['-2.8179', '0.0587', '1.9918'], ['-2.7484', '-0.3900', '1.9935'], ['-2.5928', '-0.8085', '1.9924'], ['-2.3636', '-1.1777', '1.9936'], ['-2.0746', '-1.5008', '1.9932'], ['-1.7391', '-1.7521', '1.9930'], ['-1.3715', '-1.9356', '1.9942'], ['-0.9842', '-2.0464', '1.9942'], ['-0.5929', '-2.0869', '1.9944'], ['-0.2170', '-2.0597', '1.9943'], ['0.1456', '-1.9759', '1.9943'], ['0.4782', '-1.8382', '1.9950'], ['0.7813', '-1.6525', '1.9949'], ['1.0456', '-1.4292', '1.9943'], ['1.2693', '-1.1702', '1.9950'], ['1.4445', '-0.8858', '1.9956'], ['1.5774', '-0.5804', '1.9955'], ['1.6692', '-0.2606', '1.9961'], ['1.7119', '0.0782', '1.9955'], ['1.6997', '0.4193', '1.9955'], ['1.6357', '0.7586', '1.9950'], ['1.5183', '1.0913', '1.9953'], ['1.3484', '1.4042', '1.9952'], ['1.1251', '1.6963', '1.9950'], ['0.8510', '1.9511', '1.9954'], ['0.5269', '2.1668', '1.9939'], ['0.1633', '2.3252', '1.9940'], ['-0.2906', '2.4275', '5.9946'], ['-0.7046', '2.4322', '5.9947'], ['-1.1294', '2.3651', '5.9937'], ['-1.5413', '2.2133', '5.9941'], ['-1.9223', '1.9801', '5.9940'], ['-2.2474', '1.6756', '5.9948'], ['-2.5127', '1.3108', '5.9940'], ['-2.6999', '0.8911', '5.9941'], ['-2.8005', '0.4454', '5.9933'], ['-2.8114', '-0.0053', '5.9933'], ['-2.7291', '-0.4511', '5.9945'], ['-2.5647', '-0.8610', '5.9937'], ['-2.3236', '-1.2263', '5.9946'], ['-2.0307', '-1.5386', '5.9935'], ['-1.6913', '-1.7848', '5.9943'], ['-1.3165', '-1.9558', '5.9943'], ['-0.9314', '-2.0579', '5.9950'], ['-0.5350', '-2.0894', '5.9948'], ['-0.1631', '-2.0545', '5.9951'], ['0.1961', '-1.9624', '5.9951'], ['0.5257', '-1.8171', '5.9952'], ['0.8218', '-1.6279', '5.9956'], ['1.0796', '-1.3980', '5.9951'], ['1.2968', '-1.1390', '5.9956'], ['1.4686', '-0.8475', '5.9956'], ['1.5978', '-0.5393', '5.9960'], ['1.6806', '-0.2144', '5.9961'], ['1.7166', '0.1232', '5.9960'], ['1.6990', '0.4629', '5.9953'], ['1.6273', '0.8066', '5.9960'], ['1.5026', '1.1345', '5.9949'], ['1.3238', '1.4464', '5.9959'], ['1.0932', '1.7339', '5.9959'], ['0.8118', '1.9860', '5.9952'], ['0.4818', '2.1931', '5.9948'], ['0.1135', '2.3442', '5.9946']]
wks_zylarr = np.array(wks_zyl, dtype='float64')
wks_refb = [['-0.2340', '2.4224', '1.9914'], ['-0.6468', '2.4384', '1.9930'], ['-1.0788', '2.3796', '1.9935'], ['-1.4891', '2.2405', '1.9933'], ['-1.8766', '2.0206', '1.9928'], ['-2.2122', '1.7200', '1.9926'], ['-2.4832', '1.3609', '1.9929'], ['-2.6819', '0.9512', '1.9929'], ['-2.7956', '0.5072', '1.9926'], ['-2.8179', '0.0587', '1.9918'], ['-2.7484', '-0.3900', '1.9935'], ['-2.5928', '-0.8085', '1.9924'], ['-2.3636', '-1.1777', '1.9936'], ['-2.0746', '-1.5008', '1.9932'], ['-1.7391', '-1.7521', '1.9930'], ['-1.3715', '-1.9356', '1.9942'], ['-0.9842', '-2.0464', '1.9942'], ['-0.5929', '-2.0869', '1.9944'], ['-0.2170', '-2.0597', '1.9943'], ['0.1456', '-1.9759', '1.9943'], ['0.4782', '-1.8382', '1.9950'], ['0.7813', '-1.6525', '1.9949'], ['1.0456', '-1.4292', '1.9943'], ['1.2693', '-1.1702', '1.9950'], ['1.4445', '-0.8858', '1.9956'], ['1.5774', '-0.5804', '1.9955'], ['1.6692', '-0.2606', '1.9961'], ['1.7119', '0.0782', '1.9955'], ['1.6997', '0.4193', '1.9955'], ['1.6357', '0.7586', '1.9950'], ['1.5183', '1.0913', '1.9953'], ['1.3484', '1.4042', '1.9952'], ['1.1251', '1.6963', '1.9950'], ['0.8510', '1.9511', '1.9954'], ['0.5269', '2.1668', '1.9939'], ['0.1633', '2.3252', '1.9940'], ['-0.2906', '2.4275', '5.9946'], ['-0.7046', '2.4322', '5.9947'], ['-1.1294', '2.3651', '5.9937'], ['-1.5413', '2.2133', '5.9941'], ['-1.9223', '1.9801', '5.9940'], ['-2.2474', '1.6756', '5.9948'], ['-2.5127', '1.3108', '5.9940'], ['-2.6999', '0.8911', '5.9941'], ['-2.8005', '0.4454', '5.9933'], ['-2.8114', '-0.0053', '5.9933'], ['-2.7291', '-0.4511', '5.9945'], ['-2.5647', '-0.8610', '5.9937'], ['-2.3236', '-1.2263', '5.9946'], ['-2.0307', '-1.5386', '5.9935'], ['-1.6913', '-1.7848', '5.9943'], ['-1.3165', '-1.9558', '5.9943'], ['-0.9314', '-2.0579', '5.9950'], ['-0.5350', '-2.0894', '5.9948'], ['-0.1631', '-2.0545', '5.9951'], ['0.1961', '-1.9624', '5.9951'], ['0.5257', '-1.8171', '5.9952'], ['0.8218', '-1.6279', '5.9956'], ['1.0796', '-1.3980', '5.9951'], ['1.2968', '-1.1390', '5.9956'], ['1.4686', '-0.8475', '5.9956'], ['1.5978', '-0.5393', '5.9960'], ['1.6806', '-0.2144', '5.9961'], ['1.7166', '0.1232', '5.9960'], ['1.6990', '0.4629', '5.9953'], ['1.6273', '0.8066', '5.9960'], ['1.5026', '1.1345', '5.9949'], ['1.3238', '1.4464', '5.9959'], ['1.0932', '1.7339', '5.9959'], ['0.8118', '1.9860', '5.9952'], ['0.4818', '2.1931', '5.9948'], ['0.1135', '2.3442', '5.9946']]
wks_refbarr = np.array(wks_refb, dtype='float64')


wks_bund = [['0.1857', '8.0302', '-0.0387'], ['-1.2127', '7.9431', '-0.0393'], ['-2.5740', '7.6120', '-0.0401'], ['-3.8560', '7.0509', '-0.0412'], ['-5.0229', '6.2738', '-0.0416'], ['-6.0359', '5.3079', '-0.0425'], ['-6.8671', '4.1782', '-0.0424'], ['-7.4885', '2.9231', '-0.0429'], ['-7.8828', '1.5788', '-0.0431'], ['-8.0354', '0.1867', '-0.0428'], ['-7.9435', '-1.2093', '-0.0426'], ['-7.6127', '-2.5734', '-0.0428'], ['-7.0497', '-3.8551', '-0.0418'], ['-6.2732', '-5.0210', '-0.0412'], ['-5.3066', '-6.0345', '-0.0412'], ['-4.1798', '-6.8640', '-0.0423'], ['-2.9229', '-7.4855', '-0.0443'], ['-1.5801', '-7.8798', '-0.0448'], ['-0.1866', '-8.0330', '-0.0448'], ['1.2095', '-7.9427', '-0.0457'], ['2.5715', '-7.6120', '-0.0455'], ['3.8549', '-7.0503', '-0.0450'], ['5.0197', '-6.2746', '-0.0444'], ['6.0357', '-5.3070', '-0.0427'], ['6.8644', '-4.1790', '-0.0423'], ['7.4856', '-2.9239', '-0.0422'], ['7.8796', '-1.5792', '-0.0414'], ['8.0350', '-0.1864', '-0.0421'], ['7.9409', '1.2101', '-0.0430'], ['7.6093', '2.5718', '-0.0427'], ['7.0464', '3.8543', '-0.0438'], ['6.2722', '5.0205', '-0.0437'], ['5.3056', '6.0333', '-0.0432'], ['4.1755', '6.8644', '-0.0426'], ['2.9204', '7.4854', '-0.0417'], ['1.5766', '7.8804', '-0.0417']]
wks_arr = np.array(wks_bund, dtype='float64')
wks_refa = [['-0.0157', '-8.0033', '-4.8770'], ['1.3775', '-7.8858', '-4.8789'], ['2.7270', '-7.5255', '-4.8805'], ['3.9921', '-6.9396', '-4.8788'], ['5.1381', '-6.1408', '-4.8789'], ['6.1266', '-5.1567', '-4.8755'], ['6.9303', '-4.0147', '-4.8753'], ['7.5215', '-2.7514', '-4.8775'], ['7.8850', '-1.4055', '-4.8741'], ['8.0083', '-0.0158', '-4.8765'], ['7.8849', '1.3744', '-4.8727'], ['7.5255', '2.7228', '-4.8728'], ['6.9381', '3.9892', '-4.8728'], ['6.1406', '5.1335', '-4.8746'], ['5.1572', '6.1224', '-4.8744'], ['4.0131', '6.9237', '-4.8716'], ['2.7539', '7.5157', '-4.8754'], ['1.4056', '7.8785', '-4.8735'], ['-0.0122', '7.9952', '-4.8552'], ['-1.3998', '7.8736', '-4.8575'], ['-2.7447', '7.5085', '-4.8579'], ['-4.0089', '6.9175', '-4.8576'], ['-5.1503', '6.1163', '-4.8614'], ['-6.1355', '5.1297', '-4.8579'], ['-6.9332', '3.9868', '-4.8594'], ['-7.5205', '2.7207', '-4.8609'], ['-7.8790', '1.3750', '-4.8590']]
wks_refarr = np.array(wks_refa, dtype='float64')
wks_kreis1 = [['-0.0902', '9.7647', '-0.7588'], ['-1.7844', '9.6931', '-0.7577'], ['-3.4675', '9.3201', '-0.7568'], ['-5.0647', '8.6435', '-0.7568'], ['-6.5198', '7.6839', '-0.7573'], ['-7.7787', '6.4742', '-0.7572'], ['-8.8032', '5.0486', '-0.7570'], ['-9.5493', '3.4611', '-0.7560'], ['-9.9953', '1.7633', '-0.7565'], ['-10.1249', '0.0102', '-0.7567'], ['-9.9336', '-1.7323', '-0.7576'], ['-9.4321', '-3.3945', '-0.7578'], ['-8.6383', '-4.9385', '-0.7578'], ['-7.5955', '-6.3054', '-0.7569'], ['-6.3317', '-7.4528', '-0.7586'], ['-4.8990', '-8.3550', '-0.7564'], ['-3.3399', '-8.9842', '-0.7587'], ['-1.7068', '-9.3288', '-0.7568'], ['-0.0683', '-9.3897', '-0.7591'], ['1.5579', '-9.1711', '-0.7570'], ['3.1086', '-8.6837', '-0.7584'], ['4.5359', '-7.9556', '-0.7569'], ['5.8288', '-6.9907', '-0.7579'], ['6.9284', '-5.8384', '-0.7593'], ['7.8200', '-4.5179', '-0.7576'], ['8.4792', '-3.0773', '-0.7574'], ['8.8980', '-1.5465', '-0.7578'], ['9.0556', '0.0370', '-0.7590'], ['8.9475', '1.6291', '-0.7571'], ['8.5738', '3.1861', '-0.7576'], ['7.9403', '4.6683', '-0.7573'], ['7.0646', '6.0304', '-0.7567'], ['5.9621', '7.2365', '-0.7564'], ['4.6597', '8.2468', '-0.7572'], ['3.1883', '9.0223', '-0.7570'], ['1.5935', '9.5374', '-0.7565']]
wks_kreis1arr = np.array(wks_kreis1, dtype='float64')
wks_kreis2 = [['-0.0869', '9.7629', '-3.8070'], ['-1.7816', '9.6912', '-3.8055'], ['-3.4659', '9.3180', '-3.8045'], ['-5.0597', '8.6434', '-3.8044'], ['-6.5161', '7.6845', '-3.8044'], ['-7.7754', '6.4739', '-3.8042'], ['-8.7996', '5.0490', '-3.8016'], ['-9.5453', '3.4628', '-3.8044'], ['-9.9916', '1.7666', '-3.8024'], ['-10.1239', '0.0131', '-3.8044'], ['-9.9323', '-1.7296', '-3.8043'], ['-9.4294', '-3.3899', '-3.8049'], ['-8.6379', '-4.9347', '-3.8054'], ['-7.5967', '-6.3007', '-3.8042'], ['-6.3336', '-7.4502', '-3.8064'], ['-4.9019', '-8.3524', '-3.8030'], ['-3.3428', '-8.9817', '-3.8063'], ['-1.7103', '-9.3267', '-3.8028'], ['-0.0713', '-9.3895', '-3.8043'], ['1.5559', '-9.1701', '-3.8049'], ['3.1039', '-8.6844', '-3.8052'], ['4.5417', '-7.9494', '-3.8053'], ['5.8274', '-6.9908', '-3.8055'], ['6.9261', '-5.8373', '-3.8050'], ['7.8166', '-4.5195', '-3.8054'], ['8.4775', '-3.0800', '-3.8053'], ['8.8961', '-1.5507', '-3.8078'], ['9.0578', '0.0343', '-3.8056'], ['8.9456', '1.6257', '-3.8065'], ['8.5717', '3.1838', '-3.8051'], ['7.9418', '4.6654', '-3.8053'], ['7.0690', '6.0306', '-3.8046'], ['5.9640', '7.2341', '-3.8047'], ['4.6623', '8.2439', '-3.8040'], ['3.1921', '9.0227', '-3.8053'], ['1.5966', '9.5356', '-3.8042']]
wks_kreis2arr = np.array(wks_kreis2, dtype='float64')
wks_zyl = [['-0.2337', '2.4324', '1.9924'], ['-0.6450', '2.4506', '1.9927'], ['-1.0751', '2.3966', '1.9931'], ['-1.4911', '2.2549', '1.9927'], ['-1.8741', '2.0317', '1.9939'], ['-2.2138', '1.7328', '1.9933'], ['-2.4874', '1.3713', '1.9940'], ['-2.6840', '0.9584', '1.9935'], ['-2.7966', '0.5145', '1.9937'], ['-2.8171', '0.0584', '1.9937'], ['-2.7481', '-0.3884', '1.9934'], ['-2.5909', '-0.8056', '1.9936'], ['-2.3600', '-1.1771', '1.9935'], ['-2.0692', '-1.4987', '1.9939'], ['-1.7327', '-1.7498', '1.9935'], ['-1.3638', '-1.9299', '1.9944'], ['-0.9797', '-2.0396', '1.9923'], ['-0.5901', '-2.0794', '1.9940'], ['-0.2141', '-2.0527', '1.9941'], ['0.1466', '-1.9704', '1.9945'], ['0.4811', '-1.8338', '1.9942'], ['0.7809', '-1.6520', '1.9944'], ['1.0443', '-1.4277', '1.9938'], ['1.2689', '-1.1689', '1.9945'], ['1.4486', '-0.8845', '1.9944'], ['1.5805', '-0.5762', '1.9945'], ['1.6703', '-0.2541', '1.9942'], ['1.7188', '0.0818', '1.9942'], ['1.7100', '0.4227', '1.9944'], ['1.6442', '0.7634', '1.9941'], ['1.5285', '1.0955', '1.9940'], ['1.3567', '1.4139', '1.9939'], ['1.1320', '1.7077', '1.9937'], ['0.8556', '1.9657', '1.9940'], ['0.5314', '2.1799', '1.9938'], ['0.1673', '2.3386', '1.9941'], ['-0.2913', '2.4387', '5.9967'], ['-0.7039', '2.4474', '5.9950'], ['-1.1314', '2.3814', '5.9936'], ['-1.5452', '2.2291', '5.9937'], ['-1.9259', '1.9942', '5.9943'], ['-2.2544', '1.6871', '5.9939'], ['-2.5167', '1.3216', '5.9947'], ['-2.7051', '0.8984', '5.9940'], ['-2.8046', '0.4494', '5.9946'], ['-2.8137', '-0.0010', '5.9945'], ['-2.7311', '-0.4493', '5.9943'], ['-2.5615', '-0.8593', '5.9943'], ['-2.3196', '-1.2282', '5.9945'], ['-2.0267', '-1.5381', '5.9944'], ['-1.6827', '-1.7775', '5.9939'], ['-1.3130', '-1.9502', '5.9951'], ['-0.9263', '-2.0497', '5.9943'], ['-0.5359', '-2.0804', '5.9950'], ['-0.1640', '-2.0482', '5.9953'], ['0.1937', '-1.9555', '5.9948'], ['0.5216', '-1.8117', '5.9947'], ['0.8192', '-1.6235', '5.9947'], ['1.0781', '-1.3964', '5.9947'], ['1.2947', '-1.1344', '5.9953'], ['1.4701', '-0.8445', '5.9951'], ['1.5965', '-0.5343', '5.9949'], ['1.6806', '-0.2098', '5.9949'], ['1.7193', '0.1289', '5.9948'], ['1.7011', '0.4684', '5.9949'], ['1.6324', '0.8089', '5.9945'], ['1.5079', '1.1395', '5.9947'], ['1.3297', '1.4550', '5.9950'], ['1.0967', '1.7436', '5.9940'], ['0.8127', '1.9966', '5.9947'], ['0.4845', '2.2055', '5.9946'], ['0.1139', '2.3560', '5.9941']]
wks_zylarr = np.array(wks_zyl, dtype='float64')
wks_refb = [['-0.2337', '2.4324', '1.9924'], ['-0.6450', '2.4506', '1.9927'], ['-1.0751', '2.3966', '1.9931'], ['-1.4911', '2.2549', '1.9927'], ['-1.8741', '2.0317', '1.9939'], ['-2.2138', '1.7328', '1.9933'], ['-2.4874', '1.3713', '1.9940'], ['-2.6840', '0.9584', '1.9935'], ['-2.7966', '0.5145', '1.9937'], ['-2.8171', '0.0584', '1.9937'], ['-2.7481', '-0.3884', '1.9934'], ['-2.5909', '-0.8056', '1.9936'], ['-2.3600', '-1.1771', '1.9935'], ['-2.0692', '-1.4987', '1.9939'], ['-1.7327', '-1.7498', '1.9935'], ['-1.3638', '-1.9299', '1.9944'], ['-0.9797', '-2.0396', '1.9923'], ['-0.5901', '-2.0794', '1.9940'], ['-0.2141', '-2.0527', '1.9941'], ['0.1466', '-1.9704', '1.9945'], ['0.4811', '-1.8338', '1.9942'], ['0.7809', '-1.6520', '1.9944'], ['1.0443', '-1.4277', '1.9938'], ['1.2689', '-1.1689', '1.9945'], ['1.4486', '-0.8845', '1.9944'], ['1.5805', '-0.5762', '1.9945'], ['1.6703', '-0.2541', '1.9942'], ['1.7188', '0.0818', '1.9942'], ['1.7100', '0.4227', '1.9944'], ['1.6442', '0.7634', '1.9941'], ['1.5285', '1.0955', '1.9940'], ['1.3567', '1.4139', '1.9939'], ['1.1320', '1.7077', '1.9937'], ['0.8556', '1.9657', '1.9940'], ['0.5314', '2.1799', '1.9938'], ['0.1673', '2.3386', '1.9941'], ['-0.2913', '2.4387', '5.9967'], ['-0.7039', '2.4474', '5.9950'], ['-1.1314', '2.3814', '5.9936'], ['-1.5452', '2.2291', '5.9937'], ['-1.9259', '1.9942', '5.9943'], ['-2.2544', '1.6871', '5.9939'], ['-2.5167', '1.3216', '5.9947'], ['-2.7051', '0.8984', '5.9940'], ['-2.8046', '0.4494', '5.9946'], ['-2.8137', '-0.0010', '5.9945'], ['-2.7311', '-0.4493', '5.9943'], ['-2.5615', '-0.8593', '5.9943'], ['-2.3196', '-1.2282', '5.9945'], ['-2.0267', '-1.5381', '5.9944'], ['-1.6827', '-1.7775', '5.9939'], ['-1.3130', '-1.9502', '5.9951'], ['-0.9263', '-2.0497', '5.9943'], ['-0.5359', '-2.0804', '5.9950'], ['-0.1640', '-2.0482', '5.9953'], ['0.1937', '-1.9555', '5.9948'], ['0.5216', '-1.8117', '5.9947'], ['0.8192', '-1.6235', '5.9947'], ['1.0781', '-1.3964', '5.9947'], ['1.2947', '-1.1344', '5.9953'], ['1.4701', '-0.8445', '5.9951'], ['1.5965', '-0.5343', '5.9949'], ['1.6806', '-0.2098', '5.9949'], ['1.7193', '0.1289', '5.9948'], ['1.7011', '0.4684', '5.9949'], ['1.6324', '0.8089', '5.9945'], ['1.5079', '1.1395', '5.9947'], ['1.3297', '1.4550', '5.9950'], ['1.0967', '1.7436', '5.9940'], ['0.8127', '1.9966', '5.9947'], ['0.4845', '2.2055', '5.9946'], ['0.1139', '2.3560', '5.9941']]
wks_refbarr = np.array(wks_refb, dtype='float64')

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.scatter(wks_arr[:,[0]], wks_arr[:,[1]], wks_arr[:,[2]], color='blue')
ax.scatter(wks_refarr[:,[0]], wks_refarr[:,[1]], wks_refarr[:,[2]], color='red')
ax.scatter(wks_kreis1arr[:,[0]], wks_kreis1arr[:,[1]], wks_kreis1arr[:,[2]], color='green')
ax.scatter(wks_kreis2arr[:,[0]], wks_kreis2arr[:,[1]], wks_kreis2arr[:,[2]], color='orange')
ax.scatter(wks_zylarr[:,[0]], wks_zylarr[:,[1]], wks_zylarr[:,[2]], color='magenta')
ax.scatter(wks_refbarr[:,[0]], wks_refbarr[:,[1]], wks_refbarr[:,[2]], color='gold')
plt.show()
"""

df = pd.read_csv("qr_codes.csv", sep=";")
#prod_df = pd.read_csv("prod_measurements.csv", sep=";", names=["trace:id","qr","status","comment","manual_measure1","manual_measure2","manual_measure3","ZylinderB_Durchmesser_status","ZylinderB_Durchmesser","ZylinderB_Zylinderform_status","ZylinderB_Zylinderform","Kreis1_MitteZ_status","Kreis1_MitteZ","Kreis1_Durchmesser_status","Kreis1_Durchmesser","Kreis2_MitteZ_status","Kreis2_MitteZ","Kreis2_Durchmesser_status","Kreis2_Durchmesser","Distanz_status", "Distanz"])
prod_df = pd.read_csv("prod_measurements2.csv", sep=";", header=0)
prods_df = pd.read_csv("Output_prod.csv", sep=",", names=["fname", "ids", "type"])
#print(prod_df.head())
#prod_df.columns = ["trace:id","qr","status","comment","manual_measure1","manual_measure2","manual_measure3","ZylinderB_Durchmesser_status","ZylinderB_Durchmesser","ZylinderB_Zylinderform_status","ZylinderB_Zylinderform","Kreis1_MitteZ_status","Kreis1_MitteZ","Kreis1_Durchmesser_status","Kreis1_Durchmesser","Kreis2_MitteZ_status","Kreis2_MitteZ","Kreis2_Durchmesser_status","Kreis2_Durchmesser","Distanz_status", "Distanz"]
#print(df)

bar_change = [128, 184, 36, 91]
param_change = [125,128,130,132,135,136,137,140,142,144,147,155,162,164,174,178,181,185,187,191,192,195,5,7,8,25,38,62,73,75,94,110]

#index = df[(df['qrcode'] == bar_change[0])]
bars = prod_df.loc[prod_df['qr'].isin(bar_change)]
params = prod_df.loc[prod_df['qr'].isin(param_change)]

print(bars, params)


prod_df.comment.value_counts(dropna=True)
sorted_df = prod_df.sort_values(by=['qr'])

qrs_prods = {'MaxxTurn45/1539846534.119446': (607, 185), 'MaxxTurn45/1539933500.4822576': (845, 64), 'MaxxTurn45/1539937648.5074499': (884, 77), 'MaxxTurn45/1539947558.164653': (944, 95), 'MaxxTurn45/1539869168.3061485': (773, 40), 'MaxxTurn45/1539777913.114158': (434, 136), 'MaxxTurn45/1539781839.2845745': (467, 147), 'MaxxTurn45/1539947296.644961': (941, 94), 'MaxxTurn45/1539787985.9778118': (533, 169), 'MaxxTurn45/1539946744.5776465': (935, 92), 'MaxxTurn45/1539849905.2950788': (634, 194), 'MaxxTurn45/1539940813.8529766': (920, 89), 'MaxxTurn45/1539788961.5123823': (545, 173), 'MaxxTurn45/1539866781.6732707': (752, 33), 'MaxxTurn45/1539850831.8287823': (643, 197),'MaxxTurn45/1539862020.776538': (694, 14), 'MaxxTurn45/1539953278.8101358': (1007, 116), 'MaxxTurn45/1539855558.0707247': (679, 9), 'MaxxTurn45/1539939667.1389508': (908, 85), 'MaxxTurn45/1539865728.2194202': (740, 29), 'MaxxTurn45/1539780437.5640476': (455, 143), 'MaxxTurn45/1539933245.806018': (842, 63), 'MaxxTurn45/1539787752.9819348': (530, 168), 'MaxxTurn45/1539853229.2547057': (661, 3), 'MaxxTurn45/1539948292.2670896': (953, 98), 'MaxxTurn45/1539932283.1509993': (836, 61), 'MaxxTurn45/1539778830.473645': (437, 137), 'MaxxTurn45/1539786140.0293653': (518, 164), 'MaxxTurn45/1539863734.1742258': (715, 21), 'MaxxTurn45/1539934738.9239945': (857, 68), 'MaxxTurn45/1539873336.5023072': (821, 56), 'MaxxTurn45/1539948750.4873638': (956, 99), 'MaxxTurn45/1539954755.0278454': (1025, 122), 'MaxxTurn45/1539863231.172295': (709, 19), 'MaxxTurn45/1539948024.6751764': (950, 97), 'MaxxTurn45/1539867240.4088647': (758, 35), 'MaxxTurn45/1539873107.7412717': (818, 55), 'MaxxTurn45/1539953538.7255042': (1010, 117), 'MaxxTurn45/1539947011.7082918': (938, 93), 'MaxxTurn45/1539782347.9170697': (473, 149), 'MaxxTurn45/1539768640.7809675': (401, 125), 'MaxxTurn45/1539845981.8048153': (579, 184), 'MaxxTurn45/1539853715.9218073': (667, 5), 'MaxxTurn45/1539936909.149092': (875, 74), 'MaxxTurn45/1539851420.6075547': (649, 199), 'MaxxTurn45/1539869396.9930165': (776, 41), 'MaxxTurn45/1539779296.4767165': (443, 139), 'MaxxTurn45/1539939170.7213504': (902, 83), 'MaxxTurn45/1539782568.4848485': (476, 150), 'MaxxTurn45/1539950052.0751345': (971, 104), 'MaxxTurn45/1539774881.2323961': (413, 129), 'MaxxTurn45/1539853463.1590164': (664, 4), 'MaxxTurn45/1539779647.7070727': (446, 140), 'MaxxTurn45/1539853960.610241': (670, 6), 'MaxxTurn45/1539789482.7455406': (551, 175), 'MaxxTurn45/1539850602.9188108': (640, 196), 'MaxxTurn45/1539864243.8894439': (721, 23), 'MaxxTurn45/1539843032.6787276': (561, 178), 'MaxxTurn45/1539873794.130889': (827, 58), 'MaxxTurn45/1539776780.647135': (428, 134), 'MaxxTurn45/1539844445.483183': (576, 183), 'MaxxTurn45/1539951397.8529685': (986, 109), 'MaxxTurn45/1539872630.812847': (812, 53), 'MaxxTurn45/1539947793.8222756': (947, 96), 'MaxxTurn45/1539787210.2165296': (524, 166), 'MaxxTurn45/1539939406.3814805': (905, 84), 'MaxxTurn45/1539843926.4190855': (570, 181), 'MaxxTurn45/1539872864.8581455': (815, 54), 'MaxxTurn45/1539789942.2105412': (557, 177), 'MaxxTurn45/1539871358.5164235': (797, 48), 'MaxxTurn45/1539938375.6591463': (893, 80), 'MaxxTurn45/1539868902.5611076': (770, 39), 'MaxxTurn45/1539950288.373055': (974, 105), 'MaxxTurn45/1539784112.0106728': (494, 156), 'MaxxTurn45/1539788524.298326': (539, 171), 'MaxxTurn45/1539936410.9095924': (869, 72), 'MaxxTurn45/1539849646.9578729': (631, 193), 'MaxxTurn45/1539783663.3386142': (488, 154), 'MaxxTurn45/1539950787.6893477': (980, 107), 'MaxxTurn45/1539949270.0858183': (962, 101), 'MaxxTurn45/1539775289.401106': (416, 130), 'MaxxTurn45/1539938110.608032': (890, 79), 'MaxxTurn45/1539870331.951634': (785, 44), 'MaxxTurn45/1539787493.6799': (527, 167), 'MaxxTurn45/1539767578.14983': (389, 121), 'MaxxTurn45/1539783889.6511242': (491, 155), 'MaxxTurn45/1539949540.1394966': (965, 102), 'MaxxTurn45/1539843317.8462138': (564, 179), 'MaxxTurn45/1539868643.7235901': (767, 38), 'MaxxTurn45/1539862497.5299973': (700, 16), 'MaxxTurn45/1539788212.9184132': (536, 170), 'MaxxTurn45/1539949816.1102145': (968, 103), 'MaxxTurn45/1539932555.679447': (839, 62), 'MaxxTurn45/1539866294.9194806': (746, 31), 'MaxxTurn45/1539937152.6355686': (878, 75), 'MaxxTurn45/1539868343.1140091': (764, 37), 'MaxxTurn45/1539951131.9031782': (983, 108), 'MaxxTurn45/1539784344.802912': (497, 157), 'MaxxTurn45/1539940381.9306014': (917, 88), 'MaxxTurn45/1539848764.2274735': (622, 190), 'MaxxTurn45/1539860863.408783': (688, 12), 'MaxxTurn45/1539844207.608547': (573, 182), 'MaxxTurn45/1539862764.7881565': (703, 17), 'MaxxTurn45/1539874020.3838706': (830, 59), 'MaxxTurn45/1539951943.5310912': (992, 111), 'MaxxTurn45/1539861754.4920955': (691, 13), 'MaxxTurn45/1539941069.607354': (923, 90), 'MaxxTurn45/1539768171.92729': (395, 123), 'MaxxTurn45/1539781148.953433': (461, 145), 'MaxxTurn45/1539864473.3160963': (725, 24), 'MaxxTurn45/1539873566.4213674': (824, 57), 'MaxxTurn45/1539949020.0393448': (959, 100), 'MaxxTurn45/1539769191.682508': (404, 126), 'MaxxTurn45/1539855082.6318893': (676, 8), 'MaxxTurn45/1539940147.177461': (914, 87), 'MaxxTurn45/1539954034.7019353': (1016, 119), 'MaxxTurn45/1539776293.4380772': (422, 132), 'MaxxTurn45/1539941365.9103549': (932, 91), 'MaxxTurn45/1539862250.1829941': (697, 15), 'MaxxTurn45/1539779920.3811874': (449, 141), 'MaxxTurn45/1539936672.1011436': (872, 73), 'MaxxTurn45/1539783110.3459804': (482, 152), 'MaxxTurn45/1539938886.8533099': (899, 82), 'MaxxTurn45/1539848388.604168': (619, 189), 'MaxxTurn45/1539870594.5451405': (788, 45), 'MaxxTurn45/1539865256.587621': (734, 27), 'MaxxTurn45/1539783365.0102794': (485, 153), 'MaxxTurn45/1539780158.398311': (452, 142), 'MaxxTurn45/1539847878.96713': (613, 187), 'MaxxTurn45/1539954521.26221': (1022, 121), 'MaxxTurn45/1539782803.8778186': (479, 151), 'MaxxTurn45/1539866545.9857836': (749, 32), 'MaxxTurn45/1539952189.0838616': (995, 112), 'MaxxTurn45/1539852669.8982103': (655, 1), 'MaxxTurn45/1539952448.1299973': (998, 113), 'MaxxTurn45/1539854247.8136997': (673, 7), 'MaxxTurn45/1539849142.707625': (625, 191), 'MaxxTurn45/1539843661.9084291': (567, 180), 'MaxxTurn45/1539780906.367151': (458, 144),'MaxxTurn45/1539935337.7276201': (863, 70), 'MaxxTurn45/1539935086.584245': (860, 69), 'MaxxTurn45/1539935587.837271': (866, 71), 'MaxxTurn45/1539860232.9746199': (682, 10), 'MaxxTurn45/1539784851.4207761': (503, 159), 'MaxxTurn45/1539785865.0524201': (515, 163), 'MaxxTurn45/1539952728.4103582': (1001, 114), 'MaxxTurn45/1539871118.8928962': (794, 47), 'MaxxTurn45/1539781379.8105493': (464, 146), 'MaxxTurn45/1539860624.3439968': (685, 11), 'MaxxTurn45/1539784573.107643': (500, 158), 'MaxxTurn45/1539789180.8189752': (548, 174), 'MaxxTurn45/1539850152.1883683': (637, 195), 'MaxxTurn45/1539773400.081768': (407, 127), 'MaxxTurn45/1539785330.3479466': (509, 161), 'MaxxTurn45/1539864948.1786497': (731, 26), 'MaxxTurn45/1539870859.9381595': (791, 46), 'MaxxTurn45/1539851074.855967': (646, 198), 'MaxxTurn45/1539849372.1130202': (628, 192), 'MaxxTurn45/1539934495.453325': (854, 67), 'MaxxTurn45/1539938624.131296': (896, 81), 'MaxxTurn45/1539789722.2583816': (554, 176), 'MaxxTurn45/1539852972.8482218': (658, 2), 'MaxxTurn45/1539871593.6375291': (800, 49), 'MaxxTurn45/1539939907.386454': (911, 86), 'MaxxTurn45/1539852241.4985137': (652, 0), 'MaxxTurn45/1539870048.0117655': (782, 43), 'MaxxTurn45/1539937875.6607707': (887, 78), 'MaxxTurn45/1539775529.087104': (419, 131), 'MaxxTurn45/1539950524.2165277': (977, 106), 'MaxxTurn45/1539869632.805362': (779, 42), 'MaxxTurn45/1539867478.8608363': (761, 36), 'MaxxTurn45/1539930046.1094997': (833, 60), 'MaxxTurn45/1539951671.2391338': (989,110), 'MaxxTurn45/1539953786.2703774': (1013, 118), 'MaxxTurn45/1539952996.7378776': (1004, 115), 'MaxxTurn45/1539767836.4780653': (392, 122), 'MaxxTurn45/1539863465.9748561': (712, 20), 'MaxxTurn45/1539768405.0772216': (398, 124), 'MaxxTurn45/1539777050.611705': (431, 135), 'MaxxTurn45/1539786937.1923714': (521, 165), 'MaxxTurn45/1539848138.8273041': (616, 188), 'MaxxTurn45/1539867009.0027378': (755, 34), 'MaxxTurn45/1539865495.732754': (737, 28), 'MaxxTurn45/1539864720.4634354': (728, 25), 'MaxxTurn45/1539785111.3025906': (506, 160), 'MaxxTurn45/1539782062.694547': (470, 148), 'MaxxTurn45/1539774203.6900575': (410, 128), 'MaxxTurn45/1539862997.7963278':(706, 18), 'MaxxTurn45/1539872383.8493233': (809, 52), 'MaxxTurn45/1539776535.7446442': (425, 133), 'MaxxTurn45/1539937394.4538643': (881, 76), 'MaxxTurn45/1539934004.254481': (851, 66), 'MaxxTurn45/1539785550.775644': (512, 162), 'MaxxTurn45/1539871834.823349': (803, 50), 'MaxxTurn45/1539779071.1246924': (440, 138), 'MaxxTurn45/1539866060.4621706': (743, 30), 'MaxxTurn45/1539872129.8354397': (806, 51), 'MaxxTurn45/1539846898.8558867': (610, 186), 'MaxxTurn45/1539954277.731383': (1019, 120), 'MaxxTurn45/1539788742.5597947': (542, 172), 'MaxxTurn45/1539863963.378872': (718, 22), 'MaxxTurn45/1539933743.6987958': (848, 65)}

ids1 = []

for item in qrs_prods.keys():
    ids1.append(qrs_prods[item][0])

qrs_broken = []

for item in prods_df.ids:
    if not item in ids1:
        qrs_broken.append(item)

print(qrs_broken)

prod_df.drop(prod_df.index[107])
prod_df.groupby('status')['trace:id'].count()

sorted_df.qr
prod_df[102:107].head(5)
prod_df[108:113].tail(5)